package com.bookshare.dao;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.bookshare.dto.TweetDTO;
import com.bookshare.util.DBConnector;

public class TweetDAO {

	private DBConnector dbConnector = new DBConnector();
	private Connection connection = dbConnector.getConnection();

	public ArrayList<TweetDTO> getTweetInfo(int id,String tweet_user_id) throws SQLException{
		ArrayList<TweetDTO> list = new ArrayList<>();

		String sql = ""
				+ "SELECT * "
				+ "FROM tweet_transaction "
				+ "WHERE id = ? AND tweet_user_id = ?";

		PreparedStatement statement = connection.prepareStatement(sql);
		statement.setInt(1, id);
		statement.setString(2, tweet_user_id);

		ResultSet resultSet = statement.executeQuery();

		while(resultSet.next()){
			TweetDTO dto = new TweetDTO();
			dto.setId(resultSet.getId("id"));
			dto.setTweet_user_id(resultSet.getString("tweet_user_id"));
			dto.setTweet_user_name(resultSet.getString("tweet_user_name"));
			dto.setTweet(resultSet.getString("tweet"));
			dto.setTweet_date(resultSet.getDate("tweet_date"));

			list.add(dto);
		}

		return list;
	}

	public void addTweet(TweetDTO dto) throws SQLException{
		String sql = ""
				+ "INSERT INTO tweet_transaction(id, tweet_user_id,tweet_user_name,tweet,tweet_date) VALUES(?, ?, ?, ?)";

		PreparedStatement statement = connection.prepareStatement(sql);
		statement.setInt(1, dto.getId());
		statement.setString(2, dto.getTweet_user_id());
		statement.setString(3, dto.getTweet_user_name());
		statement.setString(4, dto.getTweet());
		statement.setDate(5, new java.sql.Date(dto.getTweet_date().getTime()));

		statement.executeUpdate();
	}

	public int removeTweet(int id) throws SQLException{
		String sql = ""
				+ "DELETE FROM tweet_transaction "
				+ "WHERE id = ?";

		PreparedStatement statement = connection.prepareStatement(sql);
		statement.setInt(1, id);

		int removeCount = statement.executeUpdate();

		return removeCount;
	}

}
